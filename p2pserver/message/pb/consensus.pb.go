// Code generated by protoc-gen-go. DO NOT EDIT.
// source: consensus.proto

package netpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConsensusPayload struct {
	Version              uint32   `protobuf:"varint,1,opt,name=Version,proto3" json:"Version,omitempty"`
	PrevHash             []byte   `protobuf:"bytes,2,opt,name=PrevHash,proto3" json:"PrevHash,omitempty"`
	Height               uint32   `protobuf:"varint,3,opt,name=Height,proto3" json:"Height,omitempty"`
	BookkeeperIndex      uint32   `protobuf:"varint,4,opt,name=BookkeeperIndex,proto3" json:"BookkeeperIndex,omitempty"`
	Timestamp            uint32   `protobuf:"varint,5,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	DestID               uint64   `protobuf:"varint,6,opt,name=DestID,proto3" json:"DestID,omitempty"`
	Data                 []byte   `protobuf:"bytes,7,opt,name=Data,proto3" json:"Data,omitempty"`
	Owner                []byte   `protobuf:"bytes,8,opt,name=Owner,proto3" json:"Owner,omitempty"`
	Signature            []byte   `protobuf:"bytes,9,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Hash                 []byte   `protobuf:"bytes,10,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsensusPayload) Reset()         { *m = ConsensusPayload{} }
func (m *ConsensusPayload) String() string { return proto.CompactTextString(m) }
func (*ConsensusPayload) ProtoMessage()    {}
func (*ConsensusPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_consensus_1fd1823a7ba1e685, []int{0}
}
func (m *ConsensusPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusPayload.Unmarshal(m, b)
}
func (m *ConsensusPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusPayload.Marshal(b, m, deterministic)
}
func (dst *ConsensusPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusPayload.Merge(dst, src)
}
func (m *ConsensusPayload) XXX_Size() int {
	return xxx_messageInfo_ConsensusPayload.Size(m)
}
func (m *ConsensusPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusPayload proto.InternalMessageInfo

func (m *ConsensusPayload) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ConsensusPayload) GetPrevHash() []byte {
	if m != nil {
		return m.PrevHash
	}
	return nil
}

func (m *ConsensusPayload) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ConsensusPayload) GetBookkeeperIndex() uint32 {
	if m != nil {
		return m.BookkeeperIndex
	}
	return 0
}

func (m *ConsensusPayload) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ConsensusPayload) GetDestID() uint64 {
	if m != nil {
		return m.DestID
	}
	return 0
}

func (m *ConsensusPayload) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ConsensusPayload) GetOwner() []byte {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *ConsensusPayload) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *ConsensusPayload) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type Consensus struct {
	Cons                 *ConsensusPayload `protobuf:"bytes,1,opt,name=Cons,proto3" json:"Cons,omitempty"`
	Hop                  uint32            `protobuf:"varint,2,opt,name=Hop,proto3" json:"Hop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Consensus) Reset()         { *m = Consensus{} }
func (m *Consensus) String() string { return proto.CompactTextString(m) }
func (*Consensus) ProtoMessage()    {}
func (*Consensus) Descriptor() ([]byte, []int) {
	return fileDescriptor_consensus_1fd1823a7ba1e685, []int{1}
}
func (m *Consensus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consensus.Unmarshal(m, b)
}
func (m *Consensus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consensus.Marshal(b, m, deterministic)
}
func (dst *Consensus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consensus.Merge(dst, src)
}
func (m *Consensus) XXX_Size() int {
	return xxx_messageInfo_Consensus.Size(m)
}
func (m *Consensus) XXX_DiscardUnknown() {
	xxx_messageInfo_Consensus.DiscardUnknown(m)
}

var xxx_messageInfo_Consensus proto.InternalMessageInfo

func (m *Consensus) GetCons() *ConsensusPayload {
	if m != nil {
		return m.Cons
	}
	return nil
}

func (m *Consensus) GetHop() uint32 {
	if m != nil {
		return m.Hop
	}
	return 0
}

func init() {
	proto.RegisterType((*ConsensusPayload)(nil), "netpb.ConsensusPayload")
	proto.RegisterType((*Consensus)(nil), "netpb.Consensus")
}

func init() { proto.RegisterFile("consensus.proto", fileDescriptor_consensus_1fd1823a7ba1e685) }

var fileDescriptor_consensus_1fd1823a7ba1e685 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcb, 0x6a, 0xeb, 0x30,
	0x10, 0x86, 0x71, 0x62, 0x3b, 0xf1, 0x9c, 0x13, 0x12, 0x86, 0xd2, 0x8a, 0xd2, 0x85, 0xc9, 0xca,
	0x50, 0xf0, 0xa2, 0x7d, 0x83, 0xd6, 0x0b, 0xa7, 0x9b, 0x06, 0xb7, 0x74, 0xaf, 0x34, 0x43, 0x6c,
	0xd2, 0x48, 0x42, 0x52, 0x7a, 0x79, 0x97, 0x3e, 0x6c, 0xd1, 0xe4, 0x06, 0xd9, 0xcd, 0xf7, 0xcf,
	0xf8, 0xc7, 0xfa, 0x60, 0xfc, 0xae, 0x95, 0x23, 0xe5, 0xb6, 0xae, 0x34, 0x56, 0x7b, 0x8d, 0x89,
	0x22, 0x6f, 0x16, 0xd3, 0xdf, 0x1e, 0x4c, 0x1e, 0x0f, 0xab, 0xb9, 0xfc, 0xf9, 0xd0, 0x72, 0x89,
	0x02, 0x06, 0x6f, 0x64, 0x5d, 0xa7, 0x95, 0x88, 0xf2, 0xa8, 0x18, 0x35, 0x07, 0xc4, 0x6b, 0x18,
	0xce, 0x2d, 0x7d, 0xd6, 0xd2, 0xb5, 0xa2, 0x97, 0x47, 0xc5, 0xff, 0xe6, 0xc8, 0x78, 0x09, 0x69,
	0x4d, 0xdd, 0xaa, 0xf5, 0xa2, 0xcf, 0x1f, 0xed, 0x09, 0x0b, 0x18, 0x3f, 0x68, 0xbd, 0x5e, 0x13,
	0x19, 0xb2, 0x33, 0xb5, 0xa4, 0x6f, 0x11, 0xf3, 0xc1, 0x79, 0x8c, 0x37, 0x90, 0xbd, 0x76, 0x1b,
	0x72, 0x5e, 0x6e, 0x8c, 0x48, 0xf8, 0xe6, 0x14, 0x84, 0xfe, 0x8a, 0x9c, 0x9f, 0x55, 0x22, 0xcd,
	0xa3, 0x22, 0x6e, 0xf6, 0x84, 0x08, 0x71, 0x25, 0xbd, 0x14, 0x03, 0xfe, 0x1f, 0x9e, 0xf1, 0x02,
	0x92, 0xe7, 0x2f, 0x45, 0x56, 0x0c, 0x39, 0xdc, 0x41, 0xe8, 0x7f, 0xe9, 0x56, 0x4a, 0xfa, 0xad,
	0x25, 0x91, 0xf1, 0xe6, 0x14, 0x84, 0x9e, 0x36, 0xbc, 0x0b, 0x76, 0x3d, 0x61, 0x9e, 0x3e, 0x41,
	0x76, 0xb4, 0x83, 0xb7, 0x10, 0x07, 0x60, 0x27, 0xff, 0xee, 0xae, 0x4a, 0x36, 0x58, 0x9e, 0xdb,
	0x6b, 0xf8, 0x08, 0x27, 0xd0, 0xaf, 0xb5, 0x61, 0x49, 0xa3, 0x26, 0x8c, 0x8b, 0x94, 0xc5, 0xdf,
	0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x5e, 0x93, 0xa4, 0x8b, 0x01, 0x00, 0x00,
}
