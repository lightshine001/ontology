// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inventory.proto

package netpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import pb "github.com/ontio/ontology/p2pserver/message/pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InvPayload struct {
	InvType              pb.InventoryType `protobuf:"varint,1,opt,name=InvType,proto3,enum=netpb.InventoryType" json:"InvType,omitempty"`
	Blk                  [][]byte         `protobuf:"bytes,2,rep,name=Blk,proto3" json:"Blk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *InvPayload) Reset()         { *m = InvPayload{} }
func (m *InvPayload) String() string { return proto.CompactTextString(m) }
func (*InvPayload) ProtoMessage()    {}
func (*InvPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_inventory_5815fadef87087d6, []int{0}
}
func (m *InvPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvPayload.Unmarshal(m, b)
}
func (m *InvPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvPayload.Marshal(b, m, deterministic)
}
func (dst *InvPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvPayload.Merge(dst, src)
}
func (m *InvPayload) XXX_Size() int {
	return xxx_messageInfo_InvPayload.Size(m)
}
func (m *InvPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_InvPayload.DiscardUnknown(m)
}

var xxx_messageInfo_InvPayload proto.InternalMessageInfo

func (m *InvPayload) GetInvType() pb.InventoryType {
	if m != nil {
		return m.InvType
	}
	return pb.InventoryType_DEFAULT
}

func (m *InvPayload) GetBlk() [][]byte {
	if m != nil {
		return m.Blk
	}
	return nil
}

type Inv struct {
	P                    *InvPayload `protobuf:"bytes,1,opt,name=P,proto3" json:"P,omitempty"`
	Hop                  uint32      `protobuf:"varint,2,opt,name=Hop,proto3" json:"Hop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Inv) Reset()         { *m = Inv{} }
func (m *Inv) String() string { return proto.CompactTextString(m) }
func (*Inv) ProtoMessage()    {}
func (*Inv) Descriptor() ([]byte, []int) {
	return fileDescriptor_inventory_5815fadef87087d6, []int{1}
}
func (m *Inv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inv.Unmarshal(m, b)
}
func (m *Inv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inv.Marshal(b, m, deterministic)
}
func (dst *Inv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inv.Merge(dst, src)
}
func (m *Inv) XXX_Size() int {
	return xxx_messageInfo_Inv.Size(m)
}
func (m *Inv) XXX_DiscardUnknown() {
	xxx_messageInfo_Inv.DiscardUnknown(m)
}

var xxx_messageInfo_Inv proto.InternalMessageInfo

func (m *Inv) GetP() *InvPayload {
	if m != nil {
		return m.P
	}
	return nil
}

func (m *Inv) GetHop() uint32 {
	if m != nil {
		return m.Hop
	}
	return 0
}

func init() {
	proto.RegisterType((*InvPayload)(nil), "netpb.InvPayload")
	proto.RegisterType((*Inv)(nil), "netpb.Inv")
}

func init() { proto.RegisterFile("inventory.proto", fileDescriptor_inventory_5815fadef87087d6) }

var fileDescriptor_inventory_5815fadef87087d6 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8e, 0xbf, 0x4b, 0xc6, 0x30,
	0x10, 0x86, 0x49, 0x8b, 0x0a, 0xf1, 0x77, 0x70, 0x28, 0x2e, 0x96, 0x4e, 0x9d, 0x12, 0xa8, 0x8b,
	0x8b, 0x8b, 0x93, 0x59, 0xa4, 0x04, 0x77, 0x49, 0xec, 0x51, 0x8b, 0x6d, 0x2e, 0xa6, 0x31, 0x90,
	0xff, 0x5e, 0x52, 0xbf, 0xf2, 0x2d, 0xc7, 0x0b, 0x77, 0xf7, 0x3c, 0x2f, 0xbd, 0x9e, 0x6c, 0x04,
	0x1b, 0xd0, 0x27, 0xee, 0x3c, 0x06, 0x64, 0x27, 0x16, 0x82, 0x33, 0xf7, 0xcf, 0xe3, 0x14, 0xbe,
	0x7e, 0x0d, 0xff, 0xc4, 0x45, 0xa0, 0x0d, 0x13, 0xe6, 0x89, 0x33, 0x8e, 0x49, 0xb8, 0xce, 0xad,
	0xe0, 0x23, 0x78, 0xb1, 0xc0, 0xba, 0xea, 0x11, 0x84, 0x33, 0x62, 0xd0, 0x41, 0x7f, 0x78, 0xf8,
	0xf9, 0xa7, 0x34, 0x6f, 0x94, 0x4a, 0x1b, 0x7b, 0x9d, 0x66, 0xd4, 0x03, 0xe3, 0xf4, 0x4c, 0xda,
	0xf8, 0x9e, 0x1c, 0x54, 0xa4, 0x26, 0xed, 0x55, 0x77, 0xc7, 0x37, 0x0b, 0x97, 0xbb, 0x3c, 0xef,
	0xd4, 0x7e, 0xc4, 0x6e, 0x68, 0xf9, 0x32, 0x7f, 0x57, 0x45, 0x5d, 0xb6, 0x17, 0x2a, 0xc7, 0xe6,
	0x89, 0x96, 0xd2, 0x46, 0xf6, 0x40, 0x49, 0xbf, 0x21, 0xce, 0xbb, 0xdb, 0x23, 0xe2, 0xa0, 0x51,
	0xa4, 0xcf, 0x9f, 0xaf, 0xe8, 0xaa, 0xa2, 0x26, 0xed, 0xa5, 0xca, 0xd1, 0x9c, 0x6e, 0x85, 0x1e,
	0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xf6, 0xcf, 0x74, 0x0b, 0xe9, 0x00, 0x00, 0x00,
}
