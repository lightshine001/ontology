// Code generated by protoc-gen-go. DO NOT EDIT.
// source: version.proto

package netpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VersionPayload struct {
	Version      uint32 `protobuf:"varint,1,opt,name=Version" json:"Version,omitempty"`
	Services     uint64 `protobuf:"varint,2,opt,name=Services" json:"Services,omitempty"`
	TimeStamp    int64  `protobuf:"varint,3,opt,name=TimeStamp" json:"TimeStamp,omitempty"`
	SyncPort     uint32 `protobuf:"varint,4,opt,name=SyncPort" json:"SyncPort,omitempty"`
	HttpInfoPort uint32 `protobuf:"varint,5,opt,name=HttpInfoPort" json:"HttpInfoPort,omitempty"`
	ConsPort     uint32 `protobuf:"varint,6,opt,name=ConsPort" json:"ConsPort,omitempty"`
	UDPPort      uint32 `protobuf:"varint,7,opt,name=UDPPort" json:"UDPPort,omitempty"`
	Cap          []byte `protobuf:"bytes,8,opt,name=Cap,proto3" json:"Cap,omitempty"`
	Nonce        uint64 `protobuf:"varint,9,opt,name=Nonce" json:"Nonce,omitempty"`
	StartHeight  uint64 `protobuf:"varint,10,opt,name=StartHeight" json:"StartHeight,omitempty"`
	Relay        uint32 `protobuf:"varint,11,opt,name=Relay" json:"Relay,omitempty"`
	IsConsensus  bool   `protobuf:"varint,12,opt,name=IsConsensus" json:"IsConsensus,omitempty"`
}

func (m *VersionPayload) Reset()                    { *m = VersionPayload{} }
func (m *VersionPayload) String() string            { return proto.CompactTextString(m) }
func (*VersionPayload) ProtoMessage()               {}
func (*VersionPayload) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{0} }

func (m *VersionPayload) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *VersionPayload) GetServices() uint64 {
	if m != nil {
		return m.Services
	}
	return 0
}

func (m *VersionPayload) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func (m *VersionPayload) GetSyncPort() uint32 {
	if m != nil {
		return m.SyncPort
	}
	return 0
}

func (m *VersionPayload) GetHttpInfoPort() uint32 {
	if m != nil {
		return m.HttpInfoPort
	}
	return 0
}

func (m *VersionPayload) GetConsPort() uint32 {
	if m != nil {
		return m.ConsPort
	}
	return 0
}

func (m *VersionPayload) GetUDPPort() uint32 {
	if m != nil {
		return m.UDPPort
	}
	return 0
}

func (m *VersionPayload) GetCap() []byte {
	if m != nil {
		return m.Cap
	}
	return nil
}

func (m *VersionPayload) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *VersionPayload) GetStartHeight() uint64 {
	if m != nil {
		return m.StartHeight
	}
	return 0
}

func (m *VersionPayload) GetRelay() uint32 {
	if m != nil {
		return m.Relay
	}
	return 0
}

func (m *VersionPayload) GetIsConsensus() bool {
	if m != nil {
		return m.IsConsensus
	}
	return false
}

type Version struct {
	P *VersionPayload `protobuf:"bytes,1,opt,name=P" json:"P,omitempty"`
}

func (m *Version) Reset()                    { *m = Version{} }
func (m *Version) String() string            { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()               {}
func (*Version) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{1} }

func (m *Version) GetP() *VersionPayload {
	if m != nil {
		return m.P
	}
	return nil
}

func init() {
	proto.RegisterType((*VersionPayload)(nil), "netpb.VersionPayload")
	proto.RegisterType((*Version)(nil), "netpb.Version")
}

func init() { proto.RegisterFile("version.proto", fileDescriptor18) }

var fileDescriptor18 = []byte{
	// 275 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x41, 0x4b, 0xc3, 0x30,
	0x1c, 0xc5, 0xc9, 0xba, 0x6e, 0xdd, 0xbf, 0x9d, 0x48, 0x50, 0x08, 0xe2, 0x21, 0xd4, 0x4b, 0x4f,
	0x3d, 0xe8, 0x47, 0x98, 0x87, 0xed, 0x22, 0x25, 0x55, 0xef, 0x59, 0x8d, 0x5a, 0xd8, 0x92, 0xd2,
	0xc4, 0x41, 0xbf, 0xab, 0x1f, 0x46, 0xf2, 0xcf, 0x56, 0xb7, 0x5b, 0x7e, 0xef, 0xf1, 0x92, 0xc7,
	0x0b, 0x2c, 0x0f, 0xaa, 0xb7, 0xad, 0xd1, 0x65, 0xd7, 0x1b, 0x67, 0x68, 0xac, 0x95, 0xeb, 0xb6,
	0xf9, 0xef, 0x04, 0xae, 0xde, 0x83, 0x51, 0xc9, 0x61, 0x67, 0xe4, 0x07, 0x65, 0x30, 0x3f, 0x2a,
	0x8c, 0x70, 0x52, 0x2c, 0xc5, 0x09, 0xe9, 0x1d, 0x24, 0xb5, 0xea, 0x0f, 0x6d, 0xa3, 0x2c, 0x9b,
	0x70, 0x52, 0x4c, 0xc5, 0xc8, 0xf4, 0x1e, 0x16, 0xaf, 0xed, 0x5e, 0xd5, 0x4e, 0xee, 0x3b, 0x16,
	0x71, 0x52, 0x44, 0xe2, 0x5f, 0xc0, 0xe4, 0xa0, 0x9b, 0xca, 0xf4, 0x8e, 0x4d, 0xf1, 0xd2, 0x91,
	0x69, 0x0e, 0xd9, 0xda, 0xb9, 0x6e, 0xa3, 0x3f, 0x0d, 0xfa, 0x31, 0xfa, 0x17, 0x9a, 0xcf, 0xaf,
	0x8c, 0xb6, 0xe8, 0xcf, 0x42, 0xfe, 0xc4, 0xbe, 0xef, 0xdb, 0x73, 0x85, 0xd6, 0x3c, 0xf4, 0x3d,
	0x22, 0xbd, 0x86, 0x68, 0x25, 0x3b, 0x96, 0x70, 0x52, 0x64, 0xc2, 0x1f, 0xe9, 0x0d, 0xc4, 0x2f,
	0x46, 0x37, 0x8a, 0x2d, 0xb0, 0x7e, 0x00, 0xca, 0x21, 0xad, 0x9d, 0xec, 0xdd, 0x5a, 0xb5, 0x5f,
	0xdf, 0x8e, 0x01, 0x7a, 0xe7, 0x92, 0xcf, 0x09, 0xb5, 0x93, 0x03, 0x4b, 0xf1, 0x85, 0x00, 0x3e,
	0xb7, 0xb1, 0xbe, 0x87, 0xd2, 0xf6, 0xc7, 0xb2, 0x8c, 0x93, 0x22, 0x11, 0xe7, 0x52, 0x5e, 0x8e,
	0x5b, 0xd2, 0x07, 0x20, 0x15, 0x0e, 0x9a, 0x3e, 0xde, 0x96, 0x38, 0x7e, 0x79, 0x39, 0xbc, 0x20,
	0xd5, 0x76, 0x86, 0x9f, 0xf3, 0xf4, 0x17, 0x00, 0x00, 0xff, 0xff, 0xfb, 0xc5, 0xad, 0x27, 0xad,
	0x01, 0x00, 0x00,
}
